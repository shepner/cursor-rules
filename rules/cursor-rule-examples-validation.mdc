---
description: Validates examples in Cursor rules
globs: ["rules/*.mdc"]
alwaysApply: true
---

# Examples Validation

This rule ensures that all Cursor rules have a sufficient number of examples and that they are properly formatted.

## Description

Validates that each Cursor rule has at least the minimum required number of examples and that they are properly formatted with code blocks.

## Config

```yaml
min_examples: 2
max_file_size: 10000  # bytes
```

## Filters

```python
def check(file_path: str) -> bool:
    """Check if file is a Cursor rule."""
    return file_path.endswith('.mdc') and file_path.startswith('rules/')
```

## Actions

```python
def validate_examples(file_path: str) -> tuple[bool, list[str]]:
    """Validate examples in a rule file."""
    issues = []
    
    try:
        # Check file size
        file_size = os.path.getsize(file_path)
        if file_size > 10000:  # 10KB
            issues.append(f"File too large: {file_size} bytes (max 10000)")
            return False, issues
            
        with open(file_path, 'r') as f:
            content = f.read()
            
        # Skip YAML frontmatter
        parts = content.split('---')
        if len(parts) >= 3:
            content = parts[2]
            
        # Find Examples section
        examples_section = None
        sections = content.split('\n## ')
        for section in sections:
            if section.startswith('Examples'):
                examples_section = section
                break
                
        if not examples_section:
            issues.append("Missing Examples section")
            return False, issues
            
        # Count examples
        example_count = 0
        in_example = False
        for line in examples_section.split('\n'):
            if line.strip().startswith('Example'):
                example_count += 1
                in_example = True
            elif line.strip().startswith('```'):
                in_example = False
                
        if example_count < 2:
            issues.append(f"Insufficient examples: {example_count} (minimum 2)")
            
        return len(issues) == 0, issues
        
    except Exception as e:
        return False, [f"Error validating examples: {str(e)}"]
```

## Examples

Example 1: Valid examples section
```markdown
## Examples

Example 1: Basic usage
```python
# Example code here
```

Example 2: Advanced usage
```python
# More example code here
```
```

Example 2: Invalid examples section (insufficient examples)
```markdown
## Examples

Example 1: Basic usage
```python
# Only one example
```
```

## Metrics

```python
def collect_metrics(file_path: str) -> dict:
    """Collect metrics about examples validation."""
    with open(file_path, 'r') as f:
        content = f.read()
        
    # Skip YAML frontmatter
    parts = content.split('---')
    if len(parts) >= 3:
        content = parts[2]
        
    # Find Examples section
    examples_section = None
    sections = content.split('\n## ')
    for section in sections:
        if section.startswith('Examples'):
            examples_section = section
            break
            
    if not examples_section:
        return {
            "has_examples_section": False,
            "example_count": 0,
            "file_size": os.path.getsize(file_path)
        }
        
    # Count examples
    example_count = 0
    for line in examples_section.split('\n'):
        if line.strip().startswith('Example'):
            example_count += 1
            
    return {
        "has_examples_section": True,
        "example_count": example_count,
        "file_size": os.path.getsize(file_path),
        "meets_minimum": example_count >= 2
    }
```

## Metadata

```yaml
category: validation
severity: error
tags:
  - examples
  - documentation
  - validation
``` 